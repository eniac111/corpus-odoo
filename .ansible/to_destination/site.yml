---
# Reconstruct the destination host from a origin dump
# see :
#  - ./group_vars/all/vars.yml
#  - ./group_vars/all/db.yml.sample
#  - inventory.sample
- {hosts: all, roles: [corpusops.roles/humanlog]}
- hosts: origin
  tasks:
    - shell: |
        cd {{project}}
        git log HEAD|head -n1|awk '{print $2}'
      register: odoo_commit
      tags: [code, sync_code]
    - set_fact: {odoo_commit: "{{odoo_commit.stdout.strip()}}"}
      tags: [code, sync_code]
    - shell: |
        set -xe
        pg_dump "{{origin_db_url}}" > /tmp/dump.sql
        sed -i -r \
           -e "/ row_security =/d" \
           -e "s/{{origin_db}}/{{destination_db}}/g" \
           -e "s/{{origin_name}}/{{destination_name}}/g" \
           -e "s/{{origin}}/{{destination}}/g" \
           /tmp/dump.sql
      tags: [db, dump_db, push_db]

- hosts: origin
  tasks: 
    - tags: [db, sync_dump, push_db]
      synchronize:
        mode: pull
        compress: false
        src: "{{item}}"
        dest: "{{item}}"
        rsync_opts: ['-a', '-z', '-v', '--delete']
      with_items: [/tmp/dump.sql]
      delegate_to: "{{destination}}"

- hosts: destination
  tasks:
    - args: {executable: bash}
      tags: [service, reset_db, service_stop]
      shell: |
        set -x
        if [[ -n $(pgrep circus) ]];then
          service circusd stop
        fi
        pids=$(pgrep -f "^python.*odoo.*openerp")
        if [[ -n $pids ]];then
          echo killing leftover odoo processes
          for i in $pids;do
            ps afux|grep $i
            kill -9 $i || /bin/true
          done
        fi
    - args: {executable: bash}
      tags: [db, load_db, reset_db]
      shell: |
        set -ex
        echo "\
        drop schema public cascade;
        create schema public;
        CREATE EXTENSION fuzzystrmatch;
        alter schema public owner to {{destination_db}};"\
        | psql -v ON_ERROR_STOP=1 "{{destination_db_url}}"
    - args: {executable: bash}
      tags: [db, load_db, load_dump]
      register: load_db
      shell: |
        set -ex
        psql "{{destination_db_url}}" -f /tmp/dump.sql
- hosts: destination
  tasks:
    - tags: [code, sync_code]
      synchronize:
        compress: false
        src: "{{project}}/{{item}}"
        dest: "{{project}}/{{item}}"
        rsync_opts: ['-a', '-z', '-v', '--delete']
      with_items: [.git/, src/odoo/, venv/]
      delegate_to: "{{origin}}"
    - shell: |
             set -ex
             cd {{project}}
             git reset --hard "{{hostvars[origin]['odoo_commit']}}"
      tags: [code, reset_project_code]
- hosts: destination
  tasks:
    - tags: [data, sync_addons]
      synchronize:
        compress: false
        src: '{{data}}/{{item}}'
        dest: '{{data}}/{{item}}'
        rsync_opts: ['-a', '-z', '-v', '--delete']
      delegate_to: "{{origin}}"
      with_items: [addons_repos/,  odoo/addons/]
    - tags: [data, sync_files]
      synchronize:
        compress: false
        src: "{{data}}/odoo/filestore/{{origin_db}}/"
        dest: "{{data}}/odoo/filestore/{{destination_db}}/"
        rsync_opts: ['-a', '-z', '-v']
      delegate_to: "{{origin}}"
- hosts: destination
  tasks:
    - args: {executable: bash}
      tags: [service, service_start]
      shell: |
        set -x
        if [[ -z $(pgrep circus) ]];then
          service circusd start
        fi
